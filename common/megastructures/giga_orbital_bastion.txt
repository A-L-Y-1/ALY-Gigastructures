orbital_bastion_0 = {
	entity = "construction_platform_entity"
	construction_entity = "construction_platform_entity"
	portrait = "GFX_megastructure_construction_background"
	place_entity_on_planet_plane = no
	construction_blocks_others = no
	entity_offset = { x = 0 y = -20 }
	prerequisites = { giga_tech_orbital_bastion }

	build_time = 900
	resources = {
		category = megastructures
		cost = {
			alloys = 2000
			influence = 100
		}
		upkeep = { energy = 5 }
	}

	potential = {
		has_ascension_perk = ap_galactic_force_projection
		has_technology = giga_tech_orbital_bastion
		NOT = { has_global_flag = academy_disabled }
	}

	possible = {
		custom_tooltip = { fail_text = "requires_no_more_than_15"	from = { count_owned_megastructure = { limit = { OR = { is_megastructure_type = orbital_bastion_0 is_megastructure_type = orbital_bastion_1 } } count <= 15 } } }
		custom_tooltip = { fail_text = "requires_inside_border"		is_inside_border = from }
	}

	placement_rules = {
		planet_possible = {
			custom_tooltip = { fail_text = "requires_no_anomaly"				has_anomaly = no }
			custom_tooltip = { fail_text = "requires_no_existing_megastructure"	giga_planet_has_megastructure = no }
			custom_tooltip = { fail_text = "requires_not_asteroid"				is_asteroid = no }
			custom_tooltip = { fail_text = "requires_not_star"					is_star = no }
		}
	}

	ai_weight = {
		weight = 100	# Default = 100
		modifier = {
			factor = 10
			from = {
				OR = {
					has_ethic = ethic_militarist
					has_ethic = ethic_fanatic_militarist
					has_civic = civic_machine_terminator
					has_civic = civic_fanatic_purifiers
					has_civic = civic_hive_devouring_swarm
					is_at_war = yes
				}
			}
		}

		# Build on border
		modifier = {
			factor = 0
			NOT = {
				any_neighbor_system = {
					exists = owner
					owner = { NOT = { is_same_value = from } }
				}
			}
		}
	}

	on_build_complete = {
		save_event_target_as = giga_system
		fromfrom.planet = { save_event_target_as = giga_planet }
		from = { country_event = { id = giga_dialog.601 } }	# Notification
		fromfrom.planet = {
			if = { limit = { exists = orbital_station } orbital_station = { dismantle = yes } }
			set_planet_flag = megastructure			# Vanilla uses to check if a megastrucure can be built here
			set_planet_flag = has_megastructure		# Vanilla uses to check if an orbital station can be built here
		}
	}
}

orbital_bastion_1 = {
	entity = "orbital_barracks_entity"
	construction_entity = "orbital_barracks_entity"
	portrait = "GFX_megastructure_orbital_bastion_background"
	place_entity_on_planet_plane = no
	entity_offset = { x = 0 y = -20 }
	upgrade_from = { orbital_bastion_0 }
	construction_blocks_others = no

	build_time = 600
	resources = {
		category = megastructures
		cost = { alloys = 2000 }
		upkeep = { energy = 10 }
	}

	potential = { NOT = { has_global_flag = academy_disabled } }
	possible = {
		custom_tooltip = {
			fail_text = "requires_no_more_than_15"
			from = {
				count_owned_megastructure = {
					limit = { is_megastructure_type = orbital_bastion_1 }
					count <= 15
				}
			}
		}
		from = {
			has_technology = giga_tech_orbital_bastion
			has_ascension_perk = ap_galactic_force_projection
		}
	}

	country_modifier = {
		country_naval_cap_add = 30
		ship_starting_experience_add = 6
		country_command_limit_add = 2
	}

	ai_weight = { factor = 10 } # If we can build it, we will build it
	on_build_complete = {
		save_event_target_as = giga_system
		fromfrom.planet = { save_event_target_as = giga_planet }
		from = { country_event = { id = giga_dialog.602 } }	# Notification
	}
}

orbital_bastion_2 = {
	entity = "orbital_barracks_2_entity"
	construction_entity = "orbital_barracks_2_construction_entity"
	portrait = "GFX_megastructure_orbital_bastion_background"
	place_entity_on_planet_plane = no
	entity_offset = { x = 0 y = -20 }
	construction_blocks_others = no
	upgrade_from = { orbital_bastion_1 }

	build_time = 1000
	resources = {
		category = megastructures
		cost = { alloys = 2500 }
		upkeep = { energy = 25 }
	}

	potential = { NOT = { has_global_flag = academy_disabled } }
	possible = {
		custom_tooltip = {
			fail_text = "requires_no_more_than_6"
			from = {
				count_owned_megastructure = {
					limit = { is_megastructure_type = orbital_bastion_2 }
					count <= 6
				}
			}
		}
		from = {
			has_technology = giga_tech_orbital_bastion
			has_ascension_perk = ap_galactic_force_projection
		}
	}

	country_modifier = {
		country_naval_cap_add = 60
		ship_starting_experience_add = 12
		country_command_limit_add = 4
	}

	ai_weight = { factor = 10 } # If we can build it, we will build it
	on_build_complete = {
		save_event_target_as = giga_system
		fromfrom.planet = { save_event_target_as = giga_planet }
		from = { country_event = { id = giga_dialog.603 } }	# Notification
	}
}

orbital_bastion_3 = {
	entity = "orbital_barracks_3_entity"
	construction_entity = "orbital_barracks_3_construction_entity"
	portrait = "GFX_megastructure_orbital_bastion_background"
	place_entity_on_planet_plane = no
	entity_offset = { x = 0 y = -20 }
	construction_blocks_others = no
	upgrade_from = { orbital_bastion_2 }

	build_time = 1500
	resources = {
		category = megastructures
		cost = { alloys = 9000 }
		upkeep = { energy = 25 }
	}

	potential = { NOT = { has_global_flag = academy_disabled } }
	possible = {
		custom_tooltip = { fail_text = "already_have_bastion_in_system" NOT = { has_star_flag = already_have_bastion_in_system } }
		custom_tooltip = {
			fail_text = "requires_no_more_than_3"
			from = {
				count_owned_megastructure = {
					limit = { is_megastructure_type = orbital_bastion_3 }
					count <= 3
				}
			}
		}
		from = {
			has_technology = giga_tech_orbital_bastion
			has_ascension_perk = ap_galactic_force_projection
		}
	}

	country_modifier = {
		country_naval_cap_add = 120
		ship_starting_experience_add = 24
		country_command_limit_add = 8
	}

	ai_weight = { factor = 10 } # If we can build it, we will build it
	on_build_start = { set_star_flag = already_have_bastion_in_system }
	on_build_cancel = { remove_star_flag = already_have_bastion_in_system }
	on_build_complete = {
		from = { country_event = { id = giga_dialog.604 } }	# Notification
	}
}