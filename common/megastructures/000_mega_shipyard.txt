mega_shipyard_0 = {
	entity = "construction_platform_entity"
	construction_entity = "construction_platform_entity"
	portrait = "GFX_megastructure_construction_background"
	place_entity_on_planet_plane = no
	entity_offset = { x = -27 y = -27 }
	prerequisites = { "tech_mega_shipyard" }

	build_time = 1800
	resources = {
		category = megastructures
		cost = {
			alloys = 3000
			influence = 300
		}
		upkeep = { energy = 5 }
	}

	possible = {
		exists = starbase
		custom_tooltip = { fail_text = "requires_inside_border"						is_inside_border = from }
		custom_tooltip = { fail_text = "requires_surveyed_system"					giga_system_is_surveyed = yes }
		custom_tooltip = { fail_text = "requires_no_black_hole_neutron_star_pulsar"	giga_is_special_star = no }
		custom_tooltip = { fail_text = "requires_no_binary_trinary"					giga_is_bitrinary = no }
		custom_tooltip = { fail_text = "requires_no_existing_megastructure"			has_no_non_gate_megastructure = yes }
		custom_tooltip = {
			fail_text = "requires_not_capped"
			from = {
				OR = {
					check_variable = { which = giga_vanilla_shipyard_cap value = 0 }						# No Cap
					check_variable = { which = giga_current_vanilla_shipyard value < giga_vanilla_shipyard_cap }
				}
			}
		}
	}

	placement_rules = {
		planet_possible = {
			custom_tooltip = { fail_text = "must_build_around_star"					is_star = yes }
			custom_tooltip = { fail_text = "requires_no_anomaly"					has_anomaly = no }
		}
	}

	ai_weight = {
		factor = 15
		modifier = { factor = 0.1	starbase = { NOT = { has_starbase_size >= starbase_starfortress } } }
		modifier = { factor = 0.1	any_neighbor_system = { exists = owner NOT = { owner = { is_same_value = from } } } }
	}

	on_build_complete = {
		from = {
			set_country_flag = built_mega_shipyard_site
			change_variable = { which = giga_current_vanilla_shipyard value = 1 }
		}
		fromfrom.planet = {
			set_planet_flag = megastructure			# Vanilla uses to check if a megastrucure can be built here
			set_planet_flag = has_megastructure		# Vanilla uses to check if an orbital station can be built here
			if = { limit = { has_orbital_station = yes } orbital_station = { dismantle = yes } }
		}
	}
}

mega_shipyard_1 = {
	entity = "mega_shipyard_01_stage_1_entity"
	construction_entity = "mega_shipyard_01_stage_1_entity"
	portrait = GFX_megastructure_construction_background
	place_entity_on_planet_plane = no
	entity_offset = { x = -27 y = -27 }
	upgrade_from = { mega_shipyard_0 }
	prerequisites = { "tech_mega_shipyard" }
	ship_modifier = { ship_starting_experience_add = 100 }
	station_modifier = { starbase_shipyard_capacity_add = 5 }
	country_modifier = { starbase_shipyard_build_speed_mult = 0.33 }

	build_time = 1800
	resources = {
		category = megastructures
		cost = { alloys = 10000 }
		upkeep = { energy = 10 }
	}

	on_build_complete = { from = { country_event = { id = feda.1 } } }
}

mega_shipyard_2 = {
	entity = "mega_shipyard_01_stage_2_entity"
	construction_entity = "mega_shipyard_01_stage_2_entity"
	portrait = GFX_megastructure_construction_background
	place_entity_on_planet_plane = no
	entity_offset = { x = -27 y = -27 }
	upgrade_from = { mega_shipyard_1 }
	prerequisites = { "tech_mega_shipyard" }
	ship_modifier = { ship_starting_experience_add = 100 }
	station_modifier = { starbase_shipyard_capacity_add = 10 }
	country_modifier = { starbase_shipyard_build_speed_mult = 0.67 }

	build_time = 1800
	resources = {
		category = megastructures
		cost = { alloys = 10000 }
		upkeep = { energy = 20 }
	}

	on_build_complete = { from = { country_event = { id = feda.2 } } }
}

mega_shipyard_3 = {
	entity = "mega_shipyard_01_stage_3_entity"
	construction_entity = "mega_shipyard_01_stage_3_entity"
	portrait = "GFX_megastructure_mega_shipyard_background"
	place_entity_on_planet_plane = no
	entity_offset = { x = -27 y = -27 }
	upgrade_from = { mega_shipyard_2 }
	prerequisites = { "tech_mega_shipyard" }
	show_prereqs = yes
	ship_modifier = { ship_starting_experience_add = 100 }
	station_modifier = { starbase_shipyard_capacity_add = 20 }
	country_modifier = { starbase_shipyard_build_speed_mult = 1 }

	build_time = 1800
	resources = {
		category = megastructures
		cost = { alloys = 10000 }
		upkeep = { energy = 40 }
	}

	on_build_complete = {
		set_star_flag = mega_shipyard_built
		from = {
			set_country_flag = has_built_or_repaired_megastructure
			country_event = { id = feda.3 }
		}
	}
}

# Ruined mega shipyard
mega_shipyard_ruined = {
	entity = "mega_shipyard_01_destroyed_entity"
	construction_entity = "mega_shipyard_01_destroyed_entity"
	portrait = "GFX_megastructure_construction_background"
	place_entity_on_planet_plane = no
	entity_offset = { x = -27 y = -27 }
	potential = { always = no }
}

# Restored mega shipyard
mega_shipyard_restored = {
	entity = "mega_shipyard_01_stage_3_entity"
	construction_entity = "mega_shipyard_01_stage_3_entity"
	portrait = "GFX_megastructure_mega_shipyard_background"
	place_entity_on_planet_plane = no
	entity_offset = { x = -27 y = -27 }
	upgrade_from = { mega_shipyard_ruined }
	ship_modifier = { ship_starting_experience_add = 100 }
	station_modifier = { starbase_shipyard_capacity_add = 20 }
	country_modifier = { starbase_shipyard_build_speed_mult = 1 }

	build_time = 3600
	resources = {
		category = megastructures
		cost = { alloys = 10000 }
		upkeep = { energy = 40 }
	}

	possible = { from = { has_technology = tech_mega_engineering } }

	on_build_start = { fromfrom = { set_graphical_culture = root.from } }
	on_build_complete = {
		set_star_flag = mega_shipyard_built
		every_system_ambient_object = {
			limit = { has_ambient_object_flag = mega_shipyard_ruined_debris }
			destroy_ambient_object = this
		}
		from = {
			set_country_flag = has_built_or_repaired_megastructure
			country_event = { id = feda.6 }
		}
		fromfrom.planet = {
			set_planet_flag = megastructure			# Vanilla uses to check if a megastrucure can be built here
			set_planet_flag = has_megastructure		# Vanilla uses to check if an orbital station can be built here
			if = { limit = { has_orbital_station = yes } orbital_station = { dismantle = yes } }
		}
	}
}