planetary_computer_0 = {
	entity = "giga_consite_5_5_entity"
	construction_entity = "giga_consite_5_5_entity"
	portrait = "GFX_megastructure_construction_background"
	construction_blocks_others = no
	place_entity_on_planet_plane = no
	prerequisites = { giga_tech_planetary_computer }

	build_time = 1800
	resources = {
		category = megastructures
		cost = {
			alloys = 2500
			influence = 75
		}
		upkeep = { energy = 5 }
	}

	potential = {
		has_technology = giga_tech_planetary_computer
		NOT = { has_global_flag = planetary_computer_disabled }
	}

	possible = { custom_tooltip = { fail_text = "requires_inside_border"		is_inside_border = from } }

	placement_rules = {
		planet_possible = {
			custom_tooltip = { fail_text = "requires_no_anomaly"				has_anomaly = no }
			custom_tooltip = { fail_text = "requires_no_existing_megastructure"	giga_planet_has_megastructure = no }
			custom_tooltip = { fail_text = "requires_survey_not_habitable"		is_surveyed = { who = prev.from status = yes } colonizeable_planet = no }
			custom_tooltip = { fail_text = "requires_not_asteroid"				is_asteroid = no }
			custom_tooltip = { fail_text = "requires_not_star"					is_star = no }
			custom_tooltip = {
				fail_text = "must_build_around_comp"
				OR = {
					AND = {
						colonizeable_planet = yes
						habitable_structure = no
					}
					is_planet_class = pc_barren
					is_planet_class = pc_barren_cold
					is_planet_class = pc_frozen
				}
			}
		}
	}

	ai_weight = {
		factor = 1

		modifier = {
			factor = 5
			fromfrom.planet = { planet_size > 20 }
		}

		modifier = {
			factor = 0.1
			from = {
				any_planet_within_border = {
					has_planet_flag = is_planetary_computer
				}
			}
		}
	}

	on_build_complete = {
		save_event_target_as = giga_system
		fromfrom.planet = { save_event_target_as = giga_planet }
		from = { country_event = { id = giga_dialog.1301 } }	# Notification
		fromfrom.planet = {
			if = { limit = { exists = orbital_station } orbital_station = { dismantle = yes } }
			set_planet_flag = megastructure			# Vanilla uses to check if a megastrucure can be built here
			set_planet_flag = has_megastructure		# Vanilla uses to check if an orbital station can be built here
		}
	}
}

#Internal
planetary_computer_1 = {
	entity = ""
	portrait = "GFX_megastructure_construction_background"
	construction_blocks_others = no
	upgrade_from = { planetary_computer_0 }

	build_time = 2500
	resources = {
		category = megastructures
		cost = {
			alloys = 5000
			energy = 5000
		}
		upkeep = {
			energy = 10
			alloys = 10
		}
	}

	potential = { NOT = { has_global_flag = planetary_computer_disabled } }
	possible = { from = { has_technology = giga_tech_planetary_computer } }

	on_build_complete = {
		save_event_target_as = giga_system
		fromfrom.planet = { save_event_target_as = giga_planet }
		from = { country_event = { id = giga_dialog.1302 } }	# Notification
	}
}

#Final
planetary_computer_2 = {
	entity = ""
	portrait = "GFX_megastructure_construction_background"
	construction_blocks_others = no
	upgrade_from = { planetary_computer_1 }

	build_time = 4700
	resources = {
		category = megastructures
		cost = {
			alloys = 20000
			energy = 20000
		}
	}

	potential = { NOT = { has_global_flag = planetary_computer_disabled } }
	possible = { from = { has_technology = giga_tech_planetary_computer } }

	on_build_complete = {
		save_event_target_as = giga_system
		fromfrom.planet = { save_event_target_as = giga_planet }
		from = {
			country_event = { id = giga_dialog.1302 }				# Notification
			set_country_flag = has_built_or_repaired_gigastructure	# Triggers Gigastructural Constructs
		}
		fromfrom.planet = {
			remove_planet_flag = has_megastructure
			remove_planet_flag = megastructure
			set_planet_flag = giga_planetary_computer
		    change_pc = pc_giga_planetary_computer
			add_modifier = { modifier = "giga_planetary_computer" days = -1 }
		}
		remove_megastructure = fromfrom
	}
}