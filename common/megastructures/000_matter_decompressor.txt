matter_decompressor_0 = {
	entity = "construction_platform_entity"
	construction_entity = "construction_platform_entity"
	portrait = "GFX_megastructure_construction_background"
	place_entity_on_planet_plane = no
	entity_offset = { x = -20 y = -20 }
	rotate_to_center = no
	scale_offset = yes
	prerequisites = { "tech_matter_decompressor" }

	build_time = 1800
	resources = {
		category = megastructures
		cost = {
			alloys = 5000
			influence = 300
		}
		upkeep = { energy = 5 }
	}

	potential = { has_gw_matter_decompressor = yes }

	possible = {
		exists = starbase
		custom_tooltip = { fail_text = "requires_inside_border"						is_inside_border = from }
		custom_tooltip = { fail_text = "requires_surveyed_system"					giga_system_is_surveyed = yes }
		custom_tooltip = { fail_text = "requires_no_habitable_planets"				giga_any_hab_planets = no }
		custom_tooltip = { fail_text = "requires_black_hole"						is_star_class = sc_black_hole }
		custom_tooltip = { fail_text = "requires_no_existing_megastructure"			has_no_non_gate_megastructure = yes }
		custom_tooltip = {
			fail_text = "requires_not_capped"
			from = {
				OR = {
					check_variable = { which = giga_vanilla_matter_cap value = 0 }						# No Cap
					check_variable = { which = giga_current_vanilla_matter value < giga_vanilla_matter_cap }
				}
			}
		}
	}

	placement_rules = {
		planet_possible = {
			custom_tooltip = { fail_text = "must_build_around_star"					is_star = yes }
			custom_tooltip = { fail_text = "requires_no_anomaly"					has_anomaly = no }
		}
	}

	ai_weight = {
		factor = 15
		modifier = { factor = 0.1	starbase = { NOT = { has_starbase_size >= starbase_starfortress } } }
		modifier = { factor = 0.1	any_neighbor_system = { exists = owner NOT = { owner = { is_same_value = from } } } }
	}

	on_build_complete = {
		from = {
			set_country_flag = built_matter_decompressor_site
			change_variable = { which = giga_current_vanilla_matter value = 1 }
		}
		fromfrom.planet = {
			set_planet_flag = megastructure			# Vanilla uses to check if a megastrucure can be built here
			set_planet_flag = has_megastructure		# Vanilla uses to check if an orbital station can be built here
			if = { limit = { has_orbital_station = yes } orbital_station = { dismantle = yes } }
		}
	}
}

matter_decompressor_1 = {
	entity = "matter_decompressor_stage_1_entity"
	construction_entity = "matter_decompressor_stage_1_construction_entity"
	portrait = "GFX_megastructure_construction_background"
	entity_offset = { x = -20 y = -20 }
	rotate_to_center = yes
	scale_offset = yes
	place_entity_on_planet_plane = no
	upgrade_from = { matter_decompressor_0 }
	prerequisites = { "tech_matter_decompressor" }

	build_time = 3600
	resources = {
		category = megastructures
		cost = { alloys = 12500 }
		produces = { minerals = 500 }
		upkeep = { energy = 25 }
	}

	on_build_complete = { from = { country_event = { id = mega.9010 } } }
}

matter_decompressor_2 = {
	entity = "matter_decompressor_stage_2_entity"
	construction_entity = "matter_decompressor_stage_2_construction_entity"
	portrait = "GFX_megastructure_construction_background"
	entity_offset = { x = -20 y = -20 }
	rotate_to_center = yes
	scale_offset = yes
	place_entity_on_planet_plane = no
	upgrade_from = { matter_decompressor_1 }
	prerequisites = { "tech_matter_decompressor" }

	build_time = 3600
	resources = {
		category = megastructures
		cost = { alloys = 12500 }
		produces = { minerals = 1000 }
		upkeep = { energy = 50 }
	}

	on_build_complete = { from = { country_event = { id = mega.9011 } } }
}

matter_decompressor_3 = {
	entity = "matter_decompressor_stage_3_entity"
	construction_entity = "matter_decompressor_stage_3_construction_entity"
	portrait = "GFX_megastructure_construction_background"
	entity_offset = { x = -20 y = -20 }
	rotate_to_center = yes
	scale_offset = yes
	place_entity_on_planet_plane = no
	build_time = 3600
	upgrade_from = { matter_decompressor_2 }
	prerequisites = { "tech_matter_decompressor" }

	resources = {
		category = megastructures
		cost = { alloys = 12500 }
		produces = { minerals = 1500 }
		upkeep = { energy = 75 }
	}

	on_build_complete = { from = { country_event = { id = mega.9012 } } }
}

matter_decompressor_4 = {
	entity = "matter_decompressor_stage_4_entity"
	construction_entity = "matter_decompressor_stage_4_construction_entity"
	portrait = "GFX_megastructure_matter_decompressor_background"
	entity_offset = { x = -20 y = -20 }
	rotate_to_center = yes
	scale_offset = yes
	place_entity_on_planet_plane = no
	upgrade_from = { matter_decompressor_3 }
	prerequisites = { "tech_matter_decompressor" }
	show_prereqs = yes

	build_time = 3600
	resources = {
		category = megastructures
		cost = { alloys = 12500 }
		produces = { minerals = 2000 }
		upkeep = { energy = 100 }
	}

	on_build_complete = {
		set_star_flag = matter_decompressor_built
		from = {
			set_country_flag = has_built_or_repaired_megastructure
			country_event = { id = mega.9013 }
		}
	}
}

# Ruined Matter Decompressor
matter_decompressor_ruined = {
	entity = "matter_decompressor_destroyed_01_entity"
	construction_entity = "matter_decompressor_stage_4_construction_entity"
	portrait = "GFX_megastructure_construction_background"
	entity_offset = { x = -20 y = -20 }
	rotate_to_center = yes
	scale_offset = yes
	place_entity_on_planet_plane = no
	potential = { always = no }
}

# Restored Matter Decompressor
matter_decompressor_restored = {
	entity = "matter_decompressor_stage_4_entity"
	construction_entity = "matter_decompressor_stage_4_construction_entity"
	portrait = "GFX_megastructure_matter_decompressor_background"
	entity_offset = { x = -20 y = -20 }
	rotate_to_center = yes
	scale_offset = yes
	place_entity_on_planet_plane = no
	upgrade_from = { matter_decompressor_ruined }

	build_time = 4800
	resources = {
		category = megastructures
		cost = { alloys = 20000 }
		produces = { minerals = 2000 }
		upkeep = { energy = 100 }
	}

	possible = { from = { has_technology = tech_mega_engineering } }

	on_build_start = { fromfrom = { set_graphical_culture = root.from } }
	on_build_complete = {
		every_system_ambient_object = { destroy_ambient_object = this }
		set_star_flag = matter_decompressor_built
		from = {
			set_country_flag = has_built_or_repaired_megastructure
			country_event = { id = mega.9101 }
		}
		fromfrom.planet = {
			set_planet_flag = megastructure			# Vanilla uses to check if a megastrucure can be built here
			set_planet_flag = has_megastructure		# Vanilla uses to check if an orbital station can be built here
		}
	}
}